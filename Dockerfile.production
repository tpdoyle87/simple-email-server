# Build stage
FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git

WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build with version information
ARG VERSION=unknown
ARG COMMIT=unknown
ARG BUILD_DATE=unknown

RUN CGO_ENABLED=0 GOOS=linux go build \
    -ldflags="-w -s -X main.version=${VERSION} -X main.commit=${COMMIT} -X main.date=${BUILD_DATE}" \
    -o emailserver cmd/emailserver/main.go

# Final stage
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add ca-certificates tzdata

WORKDIR /app

# Copy binary from builder
COPY --from=builder /app/emailserver .

# Copy production config template
COPY config/production.yaml /app/config/config.yaml

# Create necessary directories
RUN mkdir -p /data /config /logs

# Create non-root user
RUN adduser -D -u 1000 emailserver && \
    chown -R emailserver:emailserver /app /data /config /logs

# Expose ports
EXPOSE 587 8080

# Switch to non-root user
USER emailserver

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Default command
CMD ["./emailserver", "-config", "/config/config.yaml"]